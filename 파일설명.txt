<<PY>><Crawler>>
1. NaverMovieCrawelr
네이버 영화<어벤져스:인피니티 워 리뷰>를 웹 크롤링을 통해 긁어옴
2. NaverSignal
네이버 영화<The signal 리뷰>를 웹 크롤링을 통해 긁어옴
3. NaverEscape
네이버 영화<7광구 리뷰>를 웹 크롤링을 통해 긁어옴
4.NaverOblivion
네이버 영화<오블리비언 리뷰>를 웹 크롤링을 통해 긁어옴
5.NaverCyborg
네이버 영화<싸이보그지만괜찮아 리뷰>를 웹 크롤링을 통해 긁어옴
**위의 Nouns 되있는 것들은 긁어온 리뷰 데이터에 대해 형태소 태깅 후에 명사,동사,형용사만을 추린 것임
**각각에 대한 결과는 txt파일을 열어보시면 확인가능합니다
<<PY>>
4. MetacriticCrawler
메타크리틱에서 <어벤져스: 인피니티 워 리뷰>를 웹 크롤링을 통해 긁어옴
**Nouns의 경우 불용어제거,Lemmatization,stopwords 제거를 거친 후에 리뷰 별로 토큰화 된 것임
5.Frequency
한글, 영어<아바타 리뷰>를 통해 리뷰의 개수가 몇 개인지, 중복단어와 중복제외 단어가 몇개나 있는지 확인함. 그리고 단어의 빈도수를 측정하여 그래프로 나타냄
6.Coocurrences
한글, 영어<아바타 리뷰>에서 각각 같이 등장하는 단어세트들이 어떤 것인지 확인함(최다빈도 동시출현 단어들)
7. Vader
Vader를 통해서 영어 <아바타 리뷰> 전체와 최상위 영어 리뷰 30개를 도출하여 각각 긍부정을 도출합니다
8.NaverSentimental  
15000개의 네이버 리뷰 셋을 통해 relu와 sigmoid를 활용하여 최상위 2천개 단어에 대해 학습시키고
5천개의 네이버 리뷰 세트를 통해 10번 테스트함 -> 그 후 각각 네이버 영화 3개에 대한 리뷰를 통해 평점과 긍부정의 비율이 비슷하게 나오는 지 살펴볼 예정
직접 실행하면 학습에 대한 결과가 나옵니다.
9. Review Graph
리뷰 30개 결과에 대한 그래프입니다
<<TXT>
10.Ratings_test
11.Ratings_train 각각 테스트와 분류기 훈련을 위한 네이버 리뷰 2만개 모음입니다. 
12.test_docs.json
13.train_docs.json 실행 속도를 위해 위의 Vectorized된 2천개의 단어 파일 결과를 json으로 저장한 것입니다
**나머지 텍스트들은 해당py에 대한 결과입니다.
<<Excel>>
14.Regression.xlsx 선형회귀분석 결과가 담긴 엑셀파일입니다.
